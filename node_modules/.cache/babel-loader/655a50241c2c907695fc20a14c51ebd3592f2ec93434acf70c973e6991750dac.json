{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1 Click\\\\Desktop\\\\EMP\\\\emp\\\\src\\\\Page\\\\edit.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Edit({\n  selectedemp,\n  Employees,\n  setEmployees,\n  Setisedit\n}) {\n  _s();\n  const [Name, setName] = useState(selectedemp.Name);\n  const [Email, setEmail] = useState(selectedemp.Email);\n  const [Pnumber, setPnumber] = useState(selectedemp.Pnumber);\n  const [Date, setDate] = useState(selectedemp.Date);\n  const handleUpdate = e => {\n    e.preventDefault();\n    const id = selectedemp.length + 1;\n    const newEmployee = {\n      id,\n      Name,\n      Email,\n      Pnumber,\n      Date\n    };\n    if (!Name || !Email || !Pnumber || !Date) {\n      return Swal.fire({\n        icon: 'error',\n        title: 'error!',\n        text: \"All fields must be Filled !\",\n        timer: 2000,\n        showConfirmButton: true\n      });\n    }\n    const updatedEmp = Employees.map(employee => {\n      if (employee.id === selectedemp.id) {\n        return newEmployee;\n      }\n      employee;\n    });\n    setEmployees(updatedEmp);\n    Setisedit(false);\n    Swal.fire({\n      icon: \"success\",\n      title: 'success',\n      showConfirmButton: false,\n      text: ` ${Name} has been added !`,\n      timer: 2000\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Edit, \"Nlrbt3hEWuxKgBbYHdxoTL0Gt0k=\");\n_c = Edit;\nexport default Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Edit","selectedemp","Employees","setEmployees","Setisedit","_s","Name","setName","Email","setEmail","Pnumber","setPnumber","Date","setDate","handleUpdate","e","preventDefault","id","length","newEmployee","Swal","fire","icon","title","text","timer","showConfirmButton","updatedEmp","map","employee","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/1 Click/Desktop/EMP/emp/src/Page/edit.js"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react';\r\nfunction Edit({selectedemp,Employees,setEmployees,Setisedit}) {\r\n\r\n  const [Name, setName] = useState(selectedemp.Name);\r\n  const [Email, setEmail] = useState(selectedemp.Email);\r\n  const [Pnumber, setPnumber] = useState(selectedemp.Pnumber);\r\n  const [Date, setDate] = useState(selectedemp.Date);\r\n\r\n  const handleUpdate = (e) => {\r\n    e.preventDefault();\r\n\r\n    \r\n\r\n    const id = selectedemp.length + 1;\r\n    const newEmployee = {id, Name, Email, Pnumber, Date };\r\n    if(!Name || !Email || !Pnumber || !Date){\r\n      return Swal.fire({\r\n        icon:'error',\r\n        title:'error!',\r\n        text: \"All fields must be Filled !\",\r\n        timer:2000,\r\n        showConfirmButton:true\r\n      })\r\n    }\r\n\r\n    const updatedEmp = Employees.map((employee)=>{\r\n      if(employee.id === selectedemp.id){\r\n        return newEmployee;\r\n      }\r\n      employee;\r\n    })\r\n    setEmployees(updatedEmp);\r\n    Setisedit(false);\r\n  \r\n  Swal.fire({\r\n    icon:\"success\",\r\n    title:'success',\r\n    showConfirmButton:false,\r\n    text: ` ${Name} has been added !`,\r\n    timer:2000\r\n  })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Edit"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,SAASC,IAAIA,CAAC;EAACC,WAAW;EAACC,SAAS;EAACC,YAAY;EAACC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAE5D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAACI,WAAW,CAACK,IAAI,CAAC;EAClD,MAAM,CAACE,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACI,WAAW,CAACO,KAAK,CAAC;EACrD,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAACI,WAAW,CAACS,OAAO,CAAC;EAC3D,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAACI,WAAW,CAACW,IAAI,CAAC;EAElD,MAAME,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAIlB,MAAMC,EAAE,GAAGhB,WAAW,CAACiB,MAAM,GAAG,CAAC;IACjC,MAAMC,WAAW,GAAG;MAACF,EAAE;MAAEX,IAAI;MAAEE,KAAK;MAAEE,OAAO;MAAEE;IAAK,CAAC;IACrD,IAAG,CAACN,IAAI,IAAI,CAACE,KAAK,IAAI,CAACE,OAAO,IAAI,CAACE,IAAI,EAAC;MACtC,OAAOQ,IAAI,CAACC,IAAI,CAAC;QACfC,IAAI,EAAC,OAAO;QACZC,KAAK,EAAC,QAAQ;QACdC,IAAI,EAAE,6BAA6B;QACnCC,KAAK,EAAC,IAAI;QACVC,iBAAiB,EAAC;MACpB,CAAC,CAAC;IACJ;IAEA,MAAMC,UAAU,GAAGzB,SAAS,CAAC0B,GAAG,CAAEC,QAAQ,IAAG;MAC3C,IAAGA,QAAQ,CAACZ,EAAE,KAAKhB,WAAW,CAACgB,EAAE,EAAC;QAChC,OAAOE,WAAW;MACpB;MACAU,QAAQ;IACV,CAAC,CAAC;IACF1B,YAAY,CAACwB,UAAU,CAAC;IACxBvB,SAAS,CAAC,KAAK,CAAC;IAElBgB,IAAI,CAACC,IAAI,CAAC;MACRC,IAAI,EAAC,SAAS;MACdC,KAAK,EAAC,SAAS;MACfG,iBAAiB,EAAC,KAAK;MACvBF,IAAI,EAAG,IAAGlB,IAAK,mBAAkB;MACjCmB,KAAK,EAAC;IACR,CAAC,CAAC;EACF,CAAC;EAED,oBACE1B,OAAA;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGK,CAAC;AAGV;AAAC5B,EAAA,CAjDQL,IAAI;AAAAkC,EAAA,GAAJlC,IAAI;AAmDb,eAAeA,IAAI;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}